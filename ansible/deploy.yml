# This playbook performs a complete deployment
# It will rewrite configuration for all services and recreate all containers
# Since webserver and database are restarted as well, there will be a short downtime
- hosts: wlb-prod-01
  become: true
  vars_files:
    - secrets/production.yml
    - vars/production.yml

  tasks:
    - name: Remove cronjob backup-lima
      cron:
        name: backup-lima
        cron_file: backup-lima
        state: absent

    - name: Remove cronjob backup-wordpress
      cron:
        name: backup-wordpress
        cron_file: backup-wordpress
        state: absent

    - name: Remove cronjob certbot-renew
      cron:
        name: certbot-renew
        cron_file: certbot-renew
        state: absent

    - name: Remove cronjob wordpress-cron
      cron:
        name: wordpress-cron
        cron_file: wordpress-cron
        state: absent

    - name: Ensure application basedir is present
      file:
        path: "{{ app_basedir }}"
        state: directory

    - name: Update setup.sql
      template:
        src: conf/setup.sql.j2
        dest: "{{ app_basedir }}/setup.sql"
        owner: root
        group: docker
        mode: '0644'

    - name: Copy backup scripts
      template:
        src: "scripts/{{ item }}.j2"
        dest: "{{ app_basedir }}/{{ item }}"
        owner: root
        group: docker
        mode: '0755'
      with_items:
        - backup-lima.sh
        - backup-wordpress.sh

    - name: Update utility scripts
      template:
        src: "scripts/{{ item }}.j2"
        dest: "{{ app_basedir }}/{{ item }}"
        owner: root
        group: docker
        mode: '0755'
      with_items:
        - certbot-create.sh
        - certbot-renew.sh

    - name: Update config files
      template:
        src: "conf/{{ item }}.j2"
        dest: "{{ app_basedir }}/{{ item }}"
        owner: root
        group: docker
        mode: '0640'
      with_items:
        - docker-compose.yml
        - nginx.conf
        - nginx-ssl.conf
        - api.env
        - ui.env
        - wordpress.env
        - my.cnf

    - name: Pull container images
      command: docker compose pull
      args:
        chdir: "{{ app_basedir }}"

    - name: Update containers
      command: docker compose up -d
      args:
        chdir: "{{ app_basedir }}"

    - name: Add cronjob backup-lima
      cron:
        name: backup-lima
        minute: "5"
        hour: "4"
        user: root
        job: "cd {{ app_basedir }} && ./backup-lima.sh create > /dev/null 2>&1"
        cron_file: backup-lima

    - name: Add cronjob backup-wordpress
      cron:
        name: backup-wordpress
        minute: "15"
        hour: "4"
        user: root
        job: "cd {{ app_basedir }} && ./backup-wordpress.sh create > /dev/null 2>&1"
        cron_file: backup-wordpress

    - name: Add cronjob certbot-renew
      cron:
        name: certbot-renew
        minute: "25"
        hour: "4"
        user: root
        job: "cd {{ app_basedir }} && ./certbot-renew.sh > /dev/null 2>&1"
        cron_file: certbot-renew

    - name: Add cronjob wordpress-cron
      cron:
        name: wordpress-cron
        minute: "*/5"
        user: root
        job: "cd {{ app_basedir }} && docker compose exec -u www-data php wp-cron.php > /dev/null 2>&1"
        cron_file: wordpress-cron
