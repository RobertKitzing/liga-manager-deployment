# This playbook performs a complete deployment
# It will rewrite configuration for all services and recreate all containers
# Since webserver and database are restarted as well, there will be a short downtime
- hosts: all
  become: true
  vars_files:
    - secrets/production.yml
    - vars/production.yml

  tasks:
    - name: Ensure application basedir is present
      file:
        path: "{{ app_basedir }}"
        state: directory

    - name: Check if docker-compose.yml exists
      stat:
        path: "{{ app_basedir }}/docker-compose.yml"
      register: docker_compose_yml

    - name: Remove running containers
      command: docker compose down
      args:
        chdir: "{{ app_basedir }}"
      when: docker_compose_yml.stat.exists

    - name: Update setup.sql
      template:
        src: conf/setup.sql.j2
        dest: "{{ app_basedir }}/setup.sql"
        owner: root
        group: docker
        mode: '0644'

    - name: Update utility scripts
      template:
        src: "scripts/{{ item }}.j2"
        dest: "{{ app_basedir }}/{{ item }}"
        owner: root
        group: docker
        mode: '0755'
      with_items:
        - backup-lima.sh
        - backup-wordpress.sh
        - certbot-create.sh
        - certbot-renew.sh

    - name: Update config files
      template:
        src: "conf/{{ item }}.j2"
        dest: "{{ app_basedir }}/{{ item }}"
        owner: root
        group: docker
        mode: '0640'
      with_items:
        - docker-compose.yml
        - nginx.conf
        - nginx-ssl.conf
        - api.env
        - ui.env
        - wordpress.env
        - my.cnf

    - name: Pull container images
      command: docker compose pull
      args:
        chdir: "{{ app_basedir }}"

    - name: Create containers
      command: docker compose up -d
      args:
        chdir: "{{ app_basedir }}"

    - name: Configure /etc/cron.d/backup-lima
      cron:
        name: backup-lima
        # disabled: yes
        minute: "5"
        hour: "4"
        user: root
        job: "cd {{ app_basedir }} && ./backup-lima.sh create > /dev/null 2>&1"
        cron_file: backup-lima

    - name: Configure /etc/cron.d/backup-wordpress
      cron:
        name: backup-wordpress
        # disabled: yes
        minute: "15"
        hour: "4"
        user: root
        job: "cd {{ app_basedir }} && ./backup-wordpress.sh create > /dev/null 2>&1"
        cron_file: backup-wordpress

    - name: Configure /etc/cron.d/certbot-renew
      cron:
        name: certbot-renew
        # disabled: yes
        minute: "25"
        hour: "4"
        user: root
        job: "cd {{ app_basedir }} && ./certbot-renew.sh > /dev/null 2>&1"
        cron_file: certbot-renew
